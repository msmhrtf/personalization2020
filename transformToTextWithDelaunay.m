%% Subject information

subjectID = 060; % subject ID of CIPIC library
subjectName = 'KEMAR'; % for file name generated by personalisation
X1 = 13.6474; % measure X1 (see report)
X3 = 19.7778; % measure X3 (see report)

perso = 1; % 0 = no personalisation, 1 = personalisation

fs = 44100;

%% 

if  fs == 44100
    L = 200;
else
    L = 218;
end

%% Optimal head radius

a = (0.41*X1/2 + 0.22*X3/2 + 3.7) / 100;

%% Import HRTF set (CIPIC database)

filePath = strcat('C:\Users\jtissi16\Documents\MATLAB\TH\CIPIC\CIPIC_hrtf_database\standard_hrir_database\subject_', sprintf('%03d',subjectID), '\hrir_final.mat');
cipic = load(filePath);

matrix_l = cipic.hrir_l;
matrix_r = cipic.hrir_r;

%% Add extremity points

% CIPIC plus stategic points
azimuths = [-90 -80 -65 -55 -45:5:45 55 65 80 90];
elevations = [-90 -45 + 5.626*(0:49) 270];

% angle pairs
[p, q] = meshgrid(azimuths, elevations);
pairs = [p(:) q(:)];

% +/-90 azimuth HRTFs -> average of az +/-80
az_m90_l = mean(squeeze(matrix_l(1,:,:)));
az_m90_r = mean(squeeze(matrix_r(1,:,:)));
az_90_l = mean(squeeze(matrix_l(25,:,:)));
az_90_r = mean(squeeze(matrix_r(25,:,:)));

% create az +/-90 matrices
az_m90_l = repmat(az_m90_l, 52, 1);
az_m90_r = repmat(az_m90_r, 52, 1);
az_90_l = repmat(az_90_l, 52, 1);
az_90_r = repmat(az_90_r, 52, 1);

% 90/270 elevation factors for weighted average
percent235 = 550/9; % 45 degrees is at 50% whereas 55 degrees is at 'percent235'
factor_235 = percent235 / (percent235+50);
factor_m45 = 50 / (percent235+50);

% create new matrix of dataset with add extra points
matrix_l_new = zeros(27, 52, 200);
matrix_l_new(2:26, 2:51, :) = matrix_l;
matrix_r_new = zeros(27, 52, 200);
matrix_r_new(2:26, 2:51, :) = matrix_r;
% add az +/-90
matrix_l_new(1,:,:) = az_m90_l;
matrix_l_new(27,:,:) = az_90_l;
matrix_r_new(1,:,:) = az_m90_r;
matrix_r_new(27,:,:) = az_90_r;
% add el -90 and 270
for i = 2:26
    % weighted average
    matrix_l_new(i,1,:) = (factor_m45 * matrix_l(i-1,1,:) + factor_235 * matrix_l(i-1,50,:)) / 2;
    matrix_l_new(i,52,:) = matrix_l_new(i,1,:);
    matrix_r_new(i,1,:) = (factor_m45 * matrix_r(i-1,1,:) + factor_235 * matrix_r(i-1,50,:)) / 2;
    matrix_r_new(i,52,:) = matrix_r_new(i,1,:);
end

%% Upsample to 48 kHz

if (fs == 48000)
    matrix_l_up = zeros(27, 52, L);
    matrix_r_up = zeros(27, 52, L);
    for i = 1:27
        for j = 1:52
            matrix_l_up(i, j, :) = changeSamplingRate(squeeze(matrix_l_new(i, j, :)), 44100, fs);
            matrix_r_up(i, j, :) = changeSamplingRate(squeeze(matrix_r_new(i, j, :)), 44100, fs);
        end
    end
    % overwride
    matrix_l_new = matrix_l_up;
    matrix_r_new = matrix_r_up;
end

%% Perso ITD

if perso
    
    frac = 1; % process with fractional delay
    in = [1; zeros(L-1,1)];
    alfa_min = 0.1; % shadow cst
    theta_min = 5*pi/6; % shadow cst (=150 degree)
    e_b = 0.0094; % ear front shift
    e_d = 0.021; % ear down shift
    [D_l(1), D_l(2), D_l(3)] = sph2cart(atan(a/e_b), atan(a/e_d) - pi/2, a);
    [D_r(1), D_r(2), D_r(3)] = sph2cart(-atan(a/e_b), atan(a/e_d) - pi/2, a);
    M = zeros(1, 3);
    
    for i = 1:length(pairs)
        % conversion to vertical
        [az, el] =  hor2sph(pairs(i,1), pairs(i,2));
        if az > 180 % to have -180:180
            az = az - 360;
        end
        [x, y, z] = sph2cart(-deg2rad(az), deg2rad(el), 1);
        
        % remove noise below eps
        x(abs(x)<eps)=0;
        y(abs(y)<eps)=0;
        z(abs(z)<eps)=0;
        
        S = [x, y, z];
        
        % compute spherical head HRIR
        [head_l, delay_l] = sphericalHead(in, M, D_l, S, a, alfa_min, theta_min, fs, frac);
        [head_r, delay_r] = sphericalHead(in, M, D_r, S, a, alfa_min, theta_min, fs, frac);
        
        % get Hrir
        [~, az_idx] = min(abs(azimuths - pairs(i,1)));
        [~, el_idx] = min(abs(elevations - pairs(i,2)));
        hrir_left = squeeze(matrix_l_new(az_idx, el_idx, :));
        hrir_right = squeeze(matrix_r_new(az_idx, el_idx, :));
        
%         yo = combineHRIR(head_l, hrir_left, delay_l, fs);
        
        % hybrid
        matrix_l_new(az_idx, el_idx, :) = combineHRIR(head_l, hrir_left, delay_l, fs);
        matrix_r_new(az_idx, el_idx, :) = combineHRIR(head_r, hrir_right, delay_r, fs);
        
    end
    
end

% normalize
matrix_l_new = matrix_l_new/max(matrix_l_new(:));
matrix_r_new = matrix_r_new/max(matrix_r_new(:));

%% Delaunay triangles

dt = delaunayTriangulation(pairs);
T = dt.ConnectivityList;    % contains the triangles mesh
X = dt.Points;              % contains the vertices of the triangles
N = neighbors(dt);          % contains the adjacency list
IC = incenter(dt);          % contains triangles center

% % Plot
% triplot(dt)
% hold on
% plot(IC(:,1),IC(:,2),'*r')
% xlabel('azimuth')
% ylabel('elevation')

%% Plot

% figure
% for i = 1:27
%     for j = 1:52
%         plot(squeeze(matrix_r(i, j, :)))
%         hold on
%     end
% end

%% Export to SOFA

folder1 = strcat('subject', sprintf('%03d',subjectID), '_perso_', subjectName);
mkdir(folder1);
addpath(folder1)
cd(folder1)
mkdir sofa
addpath('sofa')
cd sofa

% modify cipic struc
cipic.hrir_l = matrix_r_new;
cipic.hrir_r = matrix_l_new;
perso2sofa(subjectID, cipic, '') % C:\Users\jtissi16\Documents\MATLAB\TH\CIPIC\persoSOFA

cd ..

%% Export to text file

folder = strcat('subject', sprintf('%03d',subjectID), '_txt');
mkdir(folder);
addpath(folder)
cd(folder);
mkdir triangles
mkdir points
addpath('triangles')
addpath('points')


% HRTFs
mat_l = zeros(27,52);
mat_r = zeros(27,52);
for i = 1:27
    mat_l = squeeze(matrix_l_new(i,:,:));
    mat_r = squeeze(matrix_r_new(i,:,:));
    
    idx = num2str(i);
    if numel(idx) == 1 % add a zero if below 10
        file_name_l = strcat('L','0',idx,'.txt');
        file_name_r = strcat('R','0',idx,'.txt');
        dlmwrite(file_name_l, mat_l,'delimiter',' ', 'precision', 16);
        dlmwrite(file_name_r, mat_r,'delimiter',' ', 'precision', 16);
    else
        file_name_l = strcat('L',idx,'.txt');
        file_name_r = strcat('R',idx,'.txt');
        dlmwrite(file_name_l, mat_l,'delimiter',' ', 'precision', 16);
        dlmwrite(file_name_r, mat_r,'delimiter',' ', 'precision', 16);
    end
end

% Triangulation
dlmwrite('triangles\triangles.txt', T, 'delimiter', ' ', 'precision', 4);
dlmwrite('points\points.txt', X, 'delimiter', ' ', 'precision', 16);

cd ..
cd ..

zip(folder1,folder1);

